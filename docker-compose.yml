version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: mucaro-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-mucaro}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mucaro_dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-mucaro_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mucaro}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mucaro-network

  # Next.js Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mucaro-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-mucaro}:${POSTGRES_PASSWORD:-mucaro_dev_password}@db:5432/${POSTGRES_DB:-mucaro_dev}
      
      # Better Auth
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET:-your-super-secret-key-change-this-in-production}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3000}
      TRUSTED_ORIGINS: ${TRUSTED_ORIGINS:-http://localhost:3000}
      
      # Node Environment
      NODE_ENV: development
      
      # OAuth Providers (optional)
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
    volumes:
      # Mount source code for hot-reload
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      # Don't mount node_modules
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mucaro-network
    command: >
      sh -c "
        cd /app/packages/db &&
        pnpm run migrate &&
        cd /app/apps/web &&
        pnpm dev
      "

volumes:
  postgres_data:
    name: mucaro-postgres-data

networks:
  mucaro-network:
    name: mucaro-network
    driver: bridge

